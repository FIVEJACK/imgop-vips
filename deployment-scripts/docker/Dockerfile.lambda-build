# Build for AWS Lambda (Amazon Linux 2 compatible)
FROM amazonlinux:2 AS builder

# Install development tools
RUN yum install -y \
    gcc \
    gcc-c++ \
    make \
    wget \
    tar \
    gzip \
    git \
    pkgconfig \
    python3 \
    python3-pip

# Install Go 1.24
RUN wget -q https://go.dev/dl/go1.24.0.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.24.0.linux-amd64.tar.gz && \
    rm go1.24.0.linux-amd64.tar.gz
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"

# Install libvips build dependencies
RUN yum install -y \
    glib2-devel \
    expat-devel \
    libjpeg-turbo-devel \
    libpng-devel \
    libwebp-devel \
    libexif-devel \
    libxml2-devel \
    zlib-devel

# Install meson and ninja
RUN pip3 install meson ninja

# Build libvips 8.17.2
WORKDIR /tmp
RUN wget -q https://github.com/libvips/libvips/releases/download/v8.17.2/vips-8.17.2.tar.xz && \
    tar -xf vips-8.17.2.tar.xz && \
    cd vips-8.17.2 && \
    meson setup build --prefix=/opt/vips --buildtype=release && \
    cd build && \
    meson compile && \
    meson install

# Set environment for Go build
ENV PKG_CONFIG_PATH="/opt/vips/lib/pkgconfig:${PKG_CONFIG_PATH}"
ENV LD_LIBRARY_PATH="/opt/vips/lib:${LD_LIBRARY_PATH}"

# Copy and build Go application
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download

COPY src/ ./src/
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-s -w" -o bootstrap src/main.go

# Create deployment package with binary and libs
RUN mkdir -p /dist/lib && \
    cp /app/bootstrap /dist/ && \
    cp -r /opt/vips/lib/*.so* /dist/lib/ 2>/dev/null || true

# Export stage
FROM scratch AS export
COPY --from=builder /dist/bootstrap /bootstrap
COPY --from=builder /dist/lib /lib
